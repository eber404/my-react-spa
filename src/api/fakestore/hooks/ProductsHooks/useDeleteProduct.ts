/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '../../client'
import type { RequestConfig, ResponseErrorConfig } from '../../client'
import type { DeleteProductMutationResponse, DeleteProductPathParams, DeleteProduct400 } from '../../types/DeleteProduct'
import type { UseMutationOptions, QueryClient } from '@tanstack/react-query'
import { useMutation } from '@tanstack/react-query'

export const deleteProductMutationKey = () => [{ url: '/products/{id}' }] as const

export type DeleteProductMutationKey = ReturnType<typeof deleteProductMutationKey>

/**
 * @description Delete a specific product by ID.
 * @summary Delete a product
 * {@link /products/:id}
 */
export async function deleteProduct(id: DeleteProductPathParams['id'], config: Partial<RequestConfig> & { client?: typeof fetch } = {}) {
  const { client: request = fetch, ...requestConfig } = config

  const res = await request<DeleteProductMutationResponse, ResponseErrorConfig<DeleteProduct400>, unknown>({
    method: 'DELETE',
    url: `/products/${id}`,
    ...requestConfig,
  })
  return res.data
}

/**
 * @description Delete a specific product by ID.
 * @summary Delete a product
 * {@link /products/:id}
 */
export function useDeleteProduct<TContext>(
  options: {
    mutation?: UseMutationOptions<DeleteProductMutationResponse, ResponseErrorConfig<DeleteProduct400>, { id: DeleteProductPathParams['id'] }, TContext> & {
      client?: QueryClient
    }
    client?: Partial<RequestConfig> & { client?: typeof fetch }
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {}
  const { client: queryClient, ...mutationOptions } = mutation
  const mutationKey = mutationOptions.mutationKey ?? deleteProductMutationKey()

  return useMutation<DeleteProductMutationResponse, ResponseErrorConfig<DeleteProduct400>, { id: DeleteProductPathParams['id'] }, TContext>(
    {
      mutationFn: async ({ id }) => {
        return deleteProduct(id, config)
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  )
}